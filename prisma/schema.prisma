generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  role      UserRole  @default(USER)
  features  Feature[] // User's created features
  votes     Vote[]    // User's votes on features
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum UserRole {
  USER
  ADMIN
}

model Feature {
  id          String        @id @default(cuid())
  title       String        @db.VarChar(100)
  description String        @db.VarChar(500)
  status      FeatureStatus @default(PENDING)
  creator     User          @relation(fields: [creatorId], references: [id])
  creatorId   String
  votes       Vote[]
  isDeleted   Boolean       @default(false)
  deletedAt   DateTime?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  statusHistory StatusChange[]
}

enum FeatureStatus {
  PENDING
  PLANNED
  IN_PROGRESS
  COMPLETED
  DENIED
}

model Vote {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  feature   Feature  @relation(fields: [featureId], references: [id])
  featureId String
  createdAt DateTime @default(now())

  @@unique([userId, featureId]) // Ensures one vote per user per feature
}

model StatusChange {
  id         String        @id @default(cuid())
  feature    Feature       @relation(fields: [featureId], references: [id])
  featureId  String
  oldStatus  FeatureStatus
  newStatus  FeatureStatus
  createdAt  DateTime      @default(now())
}

